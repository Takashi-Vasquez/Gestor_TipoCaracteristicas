// <auto-generated />
using System;
using Gestor_TipoCaracteristicas.Helpers;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Gestor_TipoCaracteristicas.Migrations
{
    [DbContext(typeof(ApiDataContext))]
    partial class ApiDataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Gestor_TipoCaracteristicas.Entities.Activo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ActivoId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("BuyDate")
                        .IsRequired()
                        .HasColumnType("Datetime")
                        .HasColumnName("BuyDate");

                    b.Property<int>("ClaseActivoId")
                        .HasColumnType("int");

                    b.Property<int?>("ClientId")
                        .HasColumnType("int")
                        .HasColumnName("ClientId");

                    b.Property<int>("Condition")
                        .HasColumnType("int")
                        .HasColumnName("Condition");

                    b.Property<string>("ContractNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ContractNumber");

                    b.Property<decimal?>("Cost")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("Cost");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("CreatedDate");

                    b.Property<string>("CreatedUser")
                        .HasColumnType("nvarchar(36)")
                        .HasColumnName("CreatedUser");

                    b.Property<int>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("int")
                        .HasColumnName("EmpresaId");

                    b.Property<int>("Estado")
                        .HasColumnType("int")
                        .HasColumnName("Estado");

                    b.Property<string>("Invoice")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Invoice");

                    b.Property<string>("LoanDocument")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("LoanDocument");

                    b.Property<int>("MarcaId")
                        .HasColumnType("int");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Model");

                    b.Property<string>("Observation")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Observation");

                    b.Property<int>("ProviderId")
                        .HasColumnType("int");

                    b.Property<int>("SedeId")
                        .HasColumnType("int")
                        .HasColumnName("SedeId");

                    b.Property<string>("SerialNumer")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("SerialNumber");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint")
                        .HasColumnName("Status");

                    b.Property<int>("TipoActivoId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("UpdatedDate");

                    b.Property<string>("UpdatedUser")
                        .HasColumnType("nvarchar(36)")
                        .HasColumnName("UpdatedUser");

                    b.HasKey("Id");

                    b.HasIndex("ClaseActivoId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("ProviderId");

                    b.HasIndex("TipoActivoId");

                    b.ToTable("Activo");
                });

            modelBuilder.Entity("Gestor_TipoCaracteristicas.Entities.Bank", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("BankId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("CreatedDate");

                    b.Property<string>("CreatedUser")
                        .HasColumnType("nvarchar(36)")
                        .HasColumnName("CreatedUser");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Name");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint")
                        .HasColumnName("Status");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("UpdatedDate");

                    b.Property<string>("UpdatedUser")
                        .HasColumnType("nvarchar(36)")
                        .HasColumnName("UpdatedUser");

                    b.HasKey("Id");

                    b.ToTable("Bank");
                });

            modelBuilder.Entity("Gestor_TipoCaracteristicas.Entities.CaracteristicasActivo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CaracteristicasActivoId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CaracteristicasTipoActivoId")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Comment");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("CreatedDate");

                    b.Property<string>("CreatedUser")
                        .HasColumnType("nvarchar(36)")
                        .HasColumnName("CreatedUser");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Name");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint")
                        .HasColumnName("Status");

                    b.Property<int>("TipoActivoId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("UpdatedDate");

                    b.Property<string>("UpdatedUser")
                        .HasColumnType("nvarchar(36)")
                        .HasColumnName("UpdatedUser");

                    b.HasKey("Id");

                    b.HasIndex("CaracteristicasTipoActivoId");

                    b.HasIndex("TipoActivoId");

                    b.ToTable("CaracteristicasActivo");
                });

            modelBuilder.Entity("Gestor_TipoCaracteristicas.Entities.CaracteristicasTipoActivo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CaracteristicasTipoActivoId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("CreatedDate");

                    b.Property<string>("CreatedUser")
                        .HasColumnType("nvarchar(36)")
                        .HasColumnName("CreatedUser");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint")
                        .HasColumnName("Status");

                    b.Property<int>("TipoActivoId")
                        .HasColumnType("int");

                    b.Property<int>("TipoCaracteristicaId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("UpdatedDate");

                    b.Property<string>("UpdatedUser")
                        .HasColumnType("nvarchar(36)")
                        .HasColumnName("UpdatedUser");

                    b.HasKey("Id");

                    b.HasIndex("TipoActivoId");

                    b.HasIndex("TipoCaracteristicaId");

                    b.ToTable("CaracteristicasTipoActivo");
                });

            modelBuilder.Entity("Gestor_TipoCaracteristicas.Entities.ClaseActivo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ClaseActivoId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("CreatedDate");

                    b.Property<string>("CreatedUser")
                        .HasColumnType("nvarchar(36)")
                        .HasColumnName("CreatedUser");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Name");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint")
                        .HasColumnName("Status");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("UpdatedDate");

                    b.Property<string>("UpdatedUser")
                        .HasColumnType("nvarchar(36)")
                        .HasColumnName("UpdatedUser");

                    b.HasKey("Id");

                    b.ToTable("ClaseActivo");
                });

            modelBuilder.Entity("Gestor_TipoCaracteristicas.Entities.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CompanyId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("CreatedDate");

                    b.Property<string>("CreatedUser")
                        .HasColumnType("nvarchar(36)")
                        .HasColumnName("CreatedUser");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Email");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Name");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("PhoneNumber");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint")
                        .HasColumnName("Status");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("UpdatedDate");

                    b.Property<string>("UpdatedUser")
                        .HasColumnType("nvarchar(36)")
                        .HasColumnName("UpdatedUser");

                    b.HasKey("Id");

                    b.ToTable("Company");
                });

            modelBuilder.Entity("Gestor_TipoCaracteristicas.Entities.Currency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CurrencyId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("CreatedDate");

                    b.Property<string>("CreatedUser")
                        .HasColumnType("nvarchar(36)")
                        .HasColumnName("CreatedUser");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Name");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint")
                        .HasColumnName("Status");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("UpdatedDate");

                    b.Property<string>("UpdatedUser")
                        .HasColumnType("nvarchar(36)")
                        .HasColumnName("UpdatedUser");

                    b.HasKey("Id");

                    b.ToTable("Currency");
                });

            modelBuilder.Entity("Gestor_TipoCaracteristicas.Entities.Marca", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MarcaId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Abbrevation")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Abbrevation");

                    b.Property<int>("ClaseActivoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("CreatedDate");

                    b.Property<string>("CreatedUser")
                        .HasColumnType("nvarchar(36)")
                        .HasColumnName("CreatedUser");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Name");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint")
                        .HasColumnName("Status");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("UpdatedDate");

                    b.Property<string>("UpdatedUser")
                        .HasColumnType("nvarchar(36)")
                        .HasColumnName("UpdatedUser");

                    b.HasKey("Id");

                    b.HasIndex("ClaseActivoId");

                    b.ToTable("Marca");
                });

            modelBuilder.Entity("Gestor_TipoCaracteristicas.Entities.Provider", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ProviderId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AdditionalComment")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("AdditionalComment");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("Address");

                    b.Property<int>("BankId")
                        .HasColumnType("int");

                    b.Property<string>("BankInterCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("BankInterCode");

                    b.Property<string>("BusinessName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("BusinessName");

                    b.Property<string>("CellPhoneNumber")
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("CellPhoneNumber");

                    b.Property<string>("ContactName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("ContactName");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("CreatedDate");

                    b.Property<string>("CreatedUser")
                        .HasColumnType("nvarchar(36)")
                        .HasColumnName("CreatedUser");

                    b.Property<int>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<string>("DocumentNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("DocumentNumber");

                    b.Property<byte>("DocumentType")
                        .HasColumnType("tinyint")
                        .HasColumnName("DocumentType");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(150)")
                        .HasColumnName("Email");

                    b.Property<byte>("PaymentType")
                        .HasColumnType("tinyint")
                        .HasColumnName("PaymentType");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("PhoneNumber");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint")
                        .HasColumnName("Status");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("UpdatedDate");

                    b.Property<string>("UpdatedUser")
                        .HasColumnType("nvarchar(36)")
                        .HasColumnName("UpdatedUser");

                    b.Property<string>("WebAddress")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("WebAddress");

                    b.HasKey("Id");

                    b.HasIndex("BankId");

                    b.HasIndex("CurrencyId");

                    b.ToTable("Provider");
                });

            modelBuilder.Entity("Gestor_TipoCaracteristicas.Entities.Tenant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TenantId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("CreatedDate");

                    b.Property<string>("CreatedUser")
                        .HasColumnType("nvarchar(36)")
                        .HasColumnName("CreatedUser");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Name");

                    b.Property<string>("NotificationEmail")
                        .IsRequired()
                        .HasColumnType("varchar(150)")
                        .HasColumnName("NotificationEmail");

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("ShortName");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint")
                        .HasColumnName("Status");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("UpdatedDate");

                    b.Property<string>("UpdatedUser")
                        .HasColumnType("nvarchar(36)")
                        .HasColumnName("UpdatedUser");

                    b.HasKey("Id");

                    b.ToTable("Tenant");
                });

            modelBuilder.Entity("Gestor_TipoCaracteristicas.Entities.TenantCompany", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TenantCompanyId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int>("CompanyType")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("CreatedDate");

                    b.Property<string>("CreatedUser")
                        .HasColumnType("nvarchar(36)")
                        .HasColumnName("CreatedUser");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint")
                        .HasColumnName("Status");

                    b.Property<int>("TenantId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("UpdatedDate");

                    b.Property<string>("UpdatedUser")
                        .HasColumnType("nvarchar(36)")
                        .HasColumnName("UpdatedUser");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("TenantId");

                    b.ToTable("TenantCompany");
                });

            modelBuilder.Entity("Gestor_TipoCaracteristicas.Entities.TipoActivo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TipoActivoId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Abbrevation")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Abbrevation");

                    b.Property<int>("ClaseActivoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("CreatedDate");

                    b.Property<string>("CreatedUser")
                        .HasColumnType("nvarchar(36)")
                        .HasColumnName("CreatedUser");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Name");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint")
                        .HasColumnName("Status");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("UpdatedDate");

                    b.Property<string>("UpdatedUser")
                        .HasColumnType("nvarchar(36)")
                        .HasColumnName("UpdatedUser");

                    b.HasKey("Id");

                    b.HasIndex("ClaseActivoId");

                    b.ToTable("TipoActivo");
                });

            modelBuilder.Entity("Gestor_TipoCaracteristicas.Entities.TipoCaracteristica", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Abbrevation")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Abbrevation");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("CreatedDate");

                    b.Property<string>("CreatedUser")
                        .HasColumnType("nvarchar(36)")
                        .HasColumnName("CreatedUser");

                    b.Property<string>("Equipment")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Equipment");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint")
                        .HasColumnName("Status");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("UpdatedDate");

                    b.Property<string>("UpdatedUser")
                        .HasColumnType("nvarchar(36)")
                        .HasColumnName("UpdatedUser");

                    b.HasKey("Id");

                    b.ToTable("TipoCaracteristica");
                });

            modelBuilder.Entity("Gestor_TipoCaracteristicas.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UserId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<Guid>("ActiveDirectoryId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ActiveDirectoryId");

                    b.Property<string>("AvatarUrl")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("AvatarUrl");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("CreatedDate");

                    b.Property<string>("CreatedUser")
                        .HasColumnType("nvarchar(36)")
                        .HasColumnName("CreatedUser");

                    b.Property<string>("DocumentNumber")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("DocumentNumber");

                    b.Property<byte>("DocumentType")
                        .HasColumnType("tinyint")
                        .HasColumnName("DocumentType");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(150)")
                        .HasColumnName("Email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("FirstName");

                    b.Property<string>("MaternalLastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("MaternalLastName");

                    b.Property<string>("PaternalLastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("PaternalLastName");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("PhoneNumber");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint")
                        .HasColumnName("Status");

                    b.Property<int>("TenantCompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("UpdatedDate");

                    b.Property<string>("UpdatedUser")
                        .HasColumnType("nvarchar(36)")
                        .HasColumnName("UpdatedUser");

                    b.Property<int>("UserPositionId")
                        .HasColumnType("int");

                    b.Property<int>("UserRoleId")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Username");

                    b.HasKey("Id");

                    b.HasIndex("TenantCompanyId");

                    b.HasIndex("UserPositionId");

                    b.HasIndex("UserRoleId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Gestor_TipoCaracteristicas.Entities.UserPosition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UserPositionId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("CreatedDate");

                    b.Property<string>("CreatedUser")
                        .HasColumnType("nvarchar(36)")
                        .HasColumnName("CreatedUser");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Name");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint")
                        .HasColumnName("Status");

                    b.Property<int>("TenantId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("UpdatedDate");

                    b.Property<string>("UpdatedUser")
                        .HasColumnType("nvarchar(36)")
                        .HasColumnName("UpdatedUser");

                    b.HasKey("Id");

                    b.HasIndex("TenantId");

                    b.ToTable("UserPosition");
                });

            modelBuilder.Entity("Gestor_TipoCaracteristicas.Entities.UserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UserRoleId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("CreatedDate");

                    b.Property<string>("CreatedUser")
                        .HasColumnType("nvarchar(36)")
                        .HasColumnName("CreatedUser");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Name");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint")
                        .HasColumnName("Status");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("UpdatedDate");

                    b.Property<string>("UpdatedUser")
                        .HasColumnType("nvarchar(36)")
                        .HasColumnName("UpdatedUser");

                    b.HasKey("Id");

                    b.ToTable("UserRole");
                });

            modelBuilder.Entity("Gestor_TipoCaracteristicas.Entities.Activo", b =>
                {
                    b.HasOne("Gestor_TipoCaracteristicas.Entities.ClaseActivo", "ClaseActivo")
                        .WithMany()
                        .HasForeignKey("ClaseActivoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Gestor_TipoCaracteristicas.Entities.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Gestor_TipoCaracteristicas.Entities.Provider", "Provider")
                        .WithMany()
                        .HasForeignKey("ProviderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Gestor_TipoCaracteristicas.Entities.TipoActivo", "TipoActivo")
                        .WithMany()
                        .HasForeignKey("TipoActivoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ClaseActivo");

                    b.Navigation("Currency");

                    b.Navigation("Provider");

                    b.Navigation("TipoActivo");
                });

            modelBuilder.Entity("Gestor_TipoCaracteristicas.Entities.CaracteristicasActivo", b =>
                {
                    b.HasOne("Gestor_TipoCaracteristicas.Entities.CaracteristicasTipoActivo", "CaracteristicasTipoActivo")
                        .WithMany()
                        .HasForeignKey("CaracteristicasTipoActivoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Gestor_TipoCaracteristicas.Entities.TipoActivo", "TipoActivo")
                        .WithMany()
                        .HasForeignKey("TipoActivoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CaracteristicasTipoActivo");

                    b.Navigation("TipoActivo");
                });

            modelBuilder.Entity("Gestor_TipoCaracteristicas.Entities.CaracteristicasTipoActivo", b =>
                {
                    b.HasOne("Gestor_TipoCaracteristicas.Entities.TipoActivo", "TipoActivo")
                        .WithMany()
                        .HasForeignKey("TipoActivoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Gestor_TipoCaracteristicas.Entities.TipoCaracteristica", "TipoCaracteristica")
                        .WithMany()
                        .HasForeignKey("TipoCaracteristicaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("TipoActivo");

                    b.Navigation("TipoCaracteristica");
                });

            modelBuilder.Entity("Gestor_TipoCaracteristicas.Entities.Marca", b =>
                {
                    b.HasOne("Gestor_TipoCaracteristicas.Entities.ClaseActivo", "ClaseActivo")
                        .WithMany()
                        .HasForeignKey("ClaseActivoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ClaseActivo");
                });

            modelBuilder.Entity("Gestor_TipoCaracteristicas.Entities.Provider", b =>
                {
                    b.HasOne("Gestor_TipoCaracteristicas.Entities.Bank", "Bank")
                        .WithMany()
                        .HasForeignKey("BankId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Gestor_TipoCaracteristicas.Entities.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Bank");

                    b.Navigation("Currency");
                });

            modelBuilder.Entity("Gestor_TipoCaracteristicas.Entities.TenantCompany", b =>
                {
                    b.HasOne("Gestor_TipoCaracteristicas.Entities.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Gestor_TipoCaracteristicas.Entities.Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Company");

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("Gestor_TipoCaracteristicas.Entities.TipoActivo", b =>
                {
                    b.HasOne("Gestor_TipoCaracteristicas.Entities.ClaseActivo", "ClaseActivo")
                        .WithMany()
                        .HasForeignKey("ClaseActivoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ClaseActivo");
                });

            modelBuilder.Entity("Gestor_TipoCaracteristicas.Entities.User", b =>
                {
                    b.HasOne("Gestor_TipoCaracteristicas.Entities.TenantCompany", "TenantCompany")
                        .WithMany()
                        .HasForeignKey("TenantCompanyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Gestor_TipoCaracteristicas.Entities.UserPosition", "UserPosition")
                        .WithMany()
                        .HasForeignKey("UserPositionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Gestor_TipoCaracteristicas.Entities.UserRole", "UserRole")
                        .WithMany()
                        .HasForeignKey("UserRoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("TenantCompany");

                    b.Navigation("UserPosition");

                    b.Navigation("UserRole");
                });

            modelBuilder.Entity("Gestor_TipoCaracteristicas.Entities.UserPosition", b =>
                {
                    b.HasOne("Gestor_TipoCaracteristicas.Entities.Tenant", "Tenant")
                        .WithMany()
                        .HasForeignKey("TenantId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Tenant");
                });
#pragma warning restore 612, 618
        }
    }
}
